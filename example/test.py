import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# --- Main Execution Example ---
if __name__ == "__main__":
    from src.interpreter import Interpreter, Lexer
    redbook_code_example = """
# RedbookLang (薯言) 来了! yyds!

听我说, '--- 基础变量和打印 ---'
种草一个 "我的昵称" 是 '薯条宝宝'
种草一个 "幸运数字" 是 -7 # 定义负数
听我说, "我的昵称", '的幸运数字是', "幸运数字"

听我说, '--- 函数定义与调用 ---'
开个新帖 叫 "制作元气早餐" 艾特 ("主食", "饮品"):
    绝绝子 '元气早餐已上线：' 加上 "主食" 加上 ' + ' 加上 "饮品" 加上 '，开启美好一天！☀️'

种草一个 "我的早餐" 是 调用 "制作元气早餐" 用 ('小面包', '燕麦拿铁')
听我说, "我的早餐"

听我说, '--- 条件语句：康康是不是 ---'
种草一个 "笔记点赞数" 是 250
康康是不是 "笔记点赞数" 大于 500 并且 "幸运数字" 小于 0:
    听我说, '哇哦！笔记小爆款，而且今天幸运值拉满！'
或者康康 "笔记点赞数" 大于 200:
    听我说, '不错哦，笔记有人气，继续加油！' # <--- 这条会执行
都不是呢:
    听我说, '没关系，每篇用心分享的笔记都是好笔记！💖'

康康是不是 反转魅力 ("笔记点赞数" 等于 0): # not (点赞 == 0) -> 点赞 != 0
    听我说, '笔记已经有赞啦，不是零蛋宝宝！'

听我说, '--- 循环：本宝宝坚持 ---'
种草一个 "每日目标步数" 是 3
种草一个 "已走步数" 是 0
开个新帖 叫 "走一步" 艾特 ("当前步数"):
    绝绝子 "当前步数" 加上 1

本宝宝坚持 "已走步数" 小于 "每日目标步数":
    种草一个 "已走步数" 是 调用 "走一步" 用 ("已走步数")

听我说, '今日运动KPI完成，共走', "已走步数", '步!🏃‍♀️'

听我说, '--- 循环：盘点清单 (支持负数和负步长) ---'
开个新帖 叫 "分享第N个草稿" 艾特 ("草稿序号"):
    听我说, '正在编辑第', "草稿序号", '个草稿，快要完成了！'

听我说, '* 正向盘点 *'
盘点清单 "草稿ID" (启动: 1, 目标: 4): # 草稿ID: 1, 2, 3
    调用 "分享第N个草稿" 用 ("草稿ID")

听我说, '* 反向盘点 *'
盘点清单 "倒数日" (启动: 3, 目标: 0, 跨步: -1): # 倒数日: 3, 2, 1
    听我说, '距离 deadline 还有:', "倒数日", '天! 冲刺！'

种草一个 "我的起点" 是 -2
种草一个 "我的终点" 是 3
种草一个 "我的步调" 是 1
盘点清单 "负数测试" (启动: "我的起点", 目标: "我的终点", 跨步: "我的步调"): # -2, -1, 0, 1, 2
    听我说, '负数循环测试值:', "负数测试"

听我说, '--- 布尔与逻辑 ---'
种草一个 "今天下雨" 是 才不是
种草一个 "周末" 是 当然啦
康康是不是 "今天下雨" 或者 反转魅力 "周末": # false or not(true) -> false or false -> false
    听我说, '坏天气，宅家刷剧吧！'
都不是呢: # 这条会执行
    听我说, '天气不错，或者就是周末，出去玩！'

听我说, '--- 错误处理 ---'
# 试试错误处理
种草一个 "空篮子" 是 0
# 下面这行会触发 ZeroDivisionError，如果取消注释
# 听我说, 100 除以 "空篮子"
听我说, '代码执行完毕，感谢使用薯言！'
"""

    print("---------- [RedbookLang (薯言) 源码] ----------")
    print(redbook_code_example)

    interpreter = Interpreter(redbook_code_example)

    print("\n---------- [词法分析结果 (Tokens) - 部分示例] ----------")
    lexer_for_debug = Lexer(redbook_code_example)
    tokens_for_debug = lexer_for_debug.tokenize()
    print(tokens_for_debug[:30])

    print("\n---------- [程序输出 (薯言说)] ----------")
    result = interpreter.interpret()
    print(result["output"])

    if result["error"]:
        print("\n---------- [错误信息 (如果有)] ----------")
        print("哎呀，代码好像有点小问题哦宝：")
        print(result["error"])
